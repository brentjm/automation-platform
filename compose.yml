x-common:
  backend: &backend_env
    BACKEND_URL: "http://web:5000"
  database: &database_env
    DATABASE_URL: postgresql://${POSTGRES_USER:-user}:${POSTGRES_PASSWORD:-password}@db:5432/${POSTGRES_DB:-laf_db}
  celery: &celery_env
    CELERY_BROKER_URL: redis://redis:6379/0
    CELERY_RESULT_BACKEND: redis://redis:6379/0

services:
  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - POSTGRES_DB=${POSTGRES_DB:-laf_db}
    ports:
      - "5432:5432"

  redis:
    image: redis:6-alpine

  web:
    build: ./app/backend
    command: ["bash", "/app/wait-for-it.sh", "db:5432", "--", "gunicorn", "--bind", "0.0.0.0:5000", "laf.main:app"]
    volumes:
      - ./app/backend:/app
    ports:
      - "5000:5000"
    environment:
      <<: [*backend_env, *database_env, *celery_env]
    depends_on:
      - db
      - redis

  worker:
    build: ./app/backend
    command: poetry run celery -A laf.tasks.celery_app worker --loglevel=info
    volumes:
      - ./app/backend:/app
    environment:
      <<: [*backend_env, *database_env, *celery_env]
    depends_on:
      - web
      - redis

  frontend:
    build:
      context: ./app/frontend
      args:
        USER_ID: ${UID}
    volumes:
      - ./app/frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - VITE_API_URL=${VITE_API_URL}
    depends_on:
      - web

volumes:
  postgres_data:
